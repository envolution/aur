name: Build with pacman and AUR cache

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    container: 
      image: archlinux:base-devel
      options: --privileged

    env:
      GIT_USERNAME: envolution
      GIT_EMAIL: involution@gmail.com
      # Define build order and package details
      PACKAGES: |
        gnome-shell-git:gnome-shell-git/PKGBUILD

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Date
        id: get-date
        run: |
          echo "date=$(date -u "+%Y-%m")" >> $GITHUB_OUTPUT

      - name: Cache pacman and AUR packages
        uses: actions/cache@v4
        with:
          path: |
            /var/cache/pacman/pkg
            ~/.cache/paru
            ~/.local/share/paru
          key: ${{ runner.os }}-pacman-aur-${{ steps.get-date.outputs.date }}
          restore-keys: |
            ${{ runner.os }}-pacman-aur-

      - name: Setup non-root user for AUR
        run: |
          # Create build user with sudo access
          useradd -m builder
          echo "builder ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/builder
          chmod 440 /etc/sudoers.d/builder
          
          # Create build directories with proper permissions
          install -d -m 755 /home/builder/.cache/paru
          install -d -m 755 /home/builder/.local/share/paru
          install -d -m 755 /home/builder/.gnupg
          chown -R builder:builder /home/builder

      - name: Initialize and update system
        run: |
          # Initialize keyring with proper permissions
          mkdir -p /etc/pacman.d/gnupg
          pacman-key --init
          pacman-key --populate archlinux
          
          # Update system and install dependencies
          pacman -Sy --noconfirm --needed archlinux-keyring
          pacman -Syu --noconfirm
          pacman -S --noconfirm --needed git base-devel openssh 

      - name: Install paru
        run: |
          cd /tmp
          sudo -u builder git clone https://aur.archlinux.org/paru-bin.git
          cd paru-bin
          sudo -u builder makepkg -si --noconfirm
          
          # Configure paru
          echo '[options]
          BatchInstall
          BottomUp
          RemoveMake
          SudoLoop
          UseAsk' | sudo tee /etc/paru.conf

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AUR_SSH_PRIVATE_KEY }}" > ~/.ssh/aur
          chmod 600 ~/.ssh/aur
          cat >> ~/.ssh/config << EOF
          Host aur.archlinux.org
              IdentityFile ~/.ssh/aur
              User aur
          EOF
          ssh-keyscan aur.archlinux.org >> ~/.ssh/known_hosts


      - name: Configure Git
        run: |
          git config --global user.name "${{ env.GIT_USERNAME }}"
          git config --global user.email "${{ env.GIT_EMAIL }}"

      - name: genkey 
        run: |
           sudo -u builder bash ./genkey.sh "${{ env.GIT_EMAIL }}" 

      - name: Test AUR keys 
        run: |
           sudo -u builder bash ./testaur.sh
           
      - name: Build and publish packages
        run: |
          echo "${{ env.PACKAGES }}" | while IFS=':' read -r package pkgbuild; do
            echo "==== Building package: $package ===="
            
            # First install the package if it exists (for dependencies)
            # sudo -u builder paru -S --noconfirm --needed "$package" || true
            # Get and install dependancies first, install only what's needed
            sudo -u builder paru -Si "$package" | awk -F'[:<=>]' '/^(Depends On|Make Deps)/ {print $2}' | xargs paru -S --needed --norebuild || true
            
            # Then build and publish
            sudo -u builder bash ./buildscript.sh "$package" "$pkgbuild" "Auto Update $package"
          done
