name: Build with pacman and AUR cache

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux:base-devel
      options: --privileged

    env:
      GIT_USERNAME: envolution
      GIT_EMAIL: involution@gmail.com
      # Define build order and package details
      PACKAGES: |
        build:goxel-voxel-editor-bin:goxel-voxel-editor-bin
      #  build:goxel-voxel-editor:goxel-voxel-editor
      #  build:goxel-voxel-editor-git:goxel-voxel-editor-git
      #  build:scilab-bin:scilab-bin
      #  build:ttf-inconsolata-g:ttf-inconsolata-g
      #  build:xcircuit:xcircuit
      #  build:os-prober-btrfs:os-prober-btrfs
      #  build:python-progress:python-progress
      #  build:clamav-git:clamav-git
      #  build:zdoom:zdoom
      #  build:zdbsp:zdbsp
      #  nobuild:slade-git:slade-git
      #  build:slade:slade
      #  build:pyinstaller-hooks-contrib:pyinstaller-hooks-contrib
      #  build:pyinstaller:pyinstaller
      #  build:aircrack-ng-git:aircrack-ng-git
      #  build:rot8-git:rot8-git
      #  build:gnome-shell-git:gnome-shell-git
      #  nobuild:shotcut-git:shotcut-git
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Date
        id: get-date
        run: |
          echo "date=$(date -u "+%Y-%m")" >> $GITHUB_OUTPUT

      - name: Cache pacman and AUR packages
        uses: actions/cache@v4
        with:
          path: |
            /var/cache/pacman/pkg
            /home/builder/.cache/paru
          key: ${{ runner.os }}-pacman-aur-${{ steps.get-date.outputs.date }}
          restore-keys: |
            ${{ runner.os }}-pacman-aur-

      - name: Setup non-root user for AUR
        run: |
          # Create build user with sudo access
          useradd -m builder
          echo "builder ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/builder
          chmod 440 /etc/sudoers.d/builder

          # Create build directories with proper permissions
          install -d -m 755 /home/builder/.cache/paru
          install -d -m 755 /home/builder/.local/share/paru
          install -d -m 755 /home/builder/.gnupg
          chown -R builder:builder /home/builder

      - name: Initialize and update system
        run: |
          # Initialize keyring with proper permissions
          mkdir -p /etc/pacman.d/gnupg
          pacman-key --init
          pacman-key --populate archlinux
          cat /etc/pacman.conf

          # Update system and install dependencies
          pacman -Sy --noconfirm --needed archlinux-keyring
          pacman -Syu --noconfirm
          pacman -S --noconfirm --needed git base-devel pacman-contrib openssh github-cli jq perl

      - name: Install paru
        run: |
          cd /tmp
          sudo -u builder git clone https://aur.archlinux.org/paru-bin.git
          cd paru-bin
          sudo -u builder makepkg -si --noconfirm

          # Configure paru
          echo '[options]
          BatchInstall
          BottomUp
          RemoveMake
          SudoLoop
          UseAsk' | sudo tee /etc/paru.conf

          sudo -u builder PATH=$PATH:/usr/bin/core_perl paru -S --noconfirm --needed pacutils-git

      - name: Setup SSH key
        run: |
          sudo -u builder mkdir -p /home/builder/.ssh
          sudo -u builder echo "${{ secrets.AUR_SSH_PRIVATE_KEY }}" > /home/builder/.ssh/aur
          sudo -u builder ssh-keyscan aur.archlinux.org >> /home/builder/.ssh/known_hosts
          sudo -u builder cat /home/builder/.ssh/known_hosts
          sudo -u builder cat >> /home/builder/.ssh/config << EOF
          Host aur.archlinux.org
                IdentityFile /home/builder/.ssh/aur
                User aur
          EOF

      - name: Configure Git
        run: |
          sudo -u builder git config --global user.name "${{ env.GIT_USERNAME }}"
          sudo -u builder git config --global user.email "${{ env.GIT_EMAIL }}"

      - name: Build and publish packages
        run: |
          echo "${{ env.PACKAGES }}" | while IFS=':' read -r build package pkgbuild; do
            # Skip empty lines
            if [ -z "$package" ] || [ -z "$pkgbuild" ]; then
              continue
            fi
            echo "==== Building package: $package ===="
            sudo -u builder bash ./buildscript.sh "${{ github.repository }}" "$GH_TOKEN" "$GITHUB_WORKSPACE" $build "$package" "$pkgbuild" "Auto update $package "
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
