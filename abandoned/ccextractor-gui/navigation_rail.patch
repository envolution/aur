--- a/lib/screens/home.dart	2023-02-18 23:30:53.000000000 -0500
+++ b/lib/screens/home.dart_patched	2024-11-29 06:44:18.681267172 -0500
@@ -5,7 +5,6 @@
 import 'package:flutter_bloc/flutter_bloc.dart';
 import 'package:flutter_markdown/flutter_markdown.dart';
 import 'package:flutter_svg/flutter_svg.dart';
-import 'package:navigation_rail/navigation_rail.dart';
 
 import 'package:ccxgui/bloc/process_bloc/process_bloc.dart';
 import 'package:ccxgui/bloc/updater_bloc/updater_bloc.dart';
@@ -16,6 +15,7 @@
 import 'package:ccxgui/screens/settings/input_settings.dart';
 import 'package:ccxgui/screens/settings/obscure_settings.dart';
 import 'package:ccxgui/screens/settings/output_settings.dart';
+import 'package:ccxgui/utils/constants.dart';
 
 class Home extends StatefulWidget {
   @override
@@ -74,114 +74,159 @@
               context, 'You are already on the latest version');
         }
       },
-      child: NavRail(
-        desktopBreakpoint: 1150,
-        hideTitleBar: true,
-        drawerHeaderBuilder: (context) {
-          return Column(
-            children: <Widget>[
-              DrawerHeader(
-                child: SvgPicture.asset(
+      child: Row(
+        children: <Widget>[
+          NavigationRail(
+            selectedIndex: _currentIndex,
+            extended: true,
+            onDestinationSelected: (int index) {
+              setState(() {
+                _currentIndex = index;
+              });
+            },
+            selectedLabelTextStyle: TextStyle(
+              color: Theme.of(context).colorScheme.secondary,
+            ),
+            unselectedIconTheme: IconThemeData(
+              color: Colors.white54,
+            ),
+            unselectedLabelTextStyle: TextStyle(
+              color: Colors.white54,
+            ),
+            selectedIconTheme: IconThemeData(
+              color: Theme.of(context).colorScheme.secondary,
+            ),
+            useIndicator: false,
+            leading: Column(
+              children: [
+                SizedBox(
+                  height: 20,
+                ),
+                SvgPicture.asset(
                   logo,
                   semanticsLabel: 'CCExtractor Logo',
+                  height: 80,
                 ),
+                _CheckForUpdatesButton(),
+              ],
+            ),
+            destinations: [
+              NavigationRailDestination(
+                padding: EdgeInsets.only(top: 6),
+                icon: Icon(Icons.dashboard),
+                selectedIcon: Icon(Icons.dashboard),
+                label: Text('Dashboard'),
               ),
-              BlocBuilder<ProcessBloc, ProcessState>(
-                builder: (context, state) {
-                  return Text(
-                    'Version: ' + state.version!.trim(),
-                    style: TextStyle(
-                        fontSize: 12,
-                        color: Theme.of(context)
-                            .bottomNavigationBarTheme
-                            .backgroundColor),
-                  );
-                },
+              NavigationRailDestination(
+                padding: EdgeInsets.only(top: 6),
+                icon: Icon(Icons.settings),
+                selectedIcon: Icon(Icons.settings),
+                label: Text('Basic Settings'),
+              ),
+              NavigationRailDestination(
+                padding: EdgeInsets.only(top: 6),
+                icon: Icon(Icons.input),
+                selectedIcon: Icon(Icons.input),
+                label: Text('Input Settings'),
+              ),
+              NavigationRailDestination(
+                padding: EdgeInsets.only(top: 6),
+                icon: Icon(Icons.dvr_outlined),
+                selectedIcon: Icon(Icons.dvr_outlined),
+                label: Text('Output Settings'),
+              ),
+              NavigationRailDestination(
+                padding: EdgeInsets.only(top: 6),
+                icon: Icon(Icons.search),
+                selectedIcon: Icon(Icons.search),
+                label: Text('HardSubx Settings'),
+              ),
+              NavigationRailDestination(
+                padding: EdgeInsets.only(top: 6),
+                icon: Icon(Icons.do_disturb_alt_rounded),
+                selectedIcon: Icon(Icons.do_disturb_alt_rounded),
+                label: Text('Obscure Settings'),
               ),
             ],
-          );
-        },
-        drawerFooterBuilder: (context) {
-          return Platform.isWindows
-              ? Padding(
-                  padding: const EdgeInsets.only(left: 20.0, bottom: 16),
-                  child: BlocBuilder<ProcessBloc, ProcessState>(
-                    builder: (context, processState) {
-                      return MaterialButton(
-                        hoverColor: Colors.transparent,
-                        onPressed: () {
-                          context
-                              .read<UpdaterBloc>()
-                              .add(CheckForUpdates(processState.version!));
-                        },
-                        child: Row(
-                          children: [
-                            Icon(
-                              Icons.update,
-                              color: Colors.white54,
-                            ),
-                            SizedBox(
-                              width: 20,
-                            ),
-                            Text(
-                              'Check for updates',
-                              style: TextStyle(
-                                  color: Colors.white60, fontSize: 14),
-                            ),
-                          ],
-                        ),
-                      );
-                    },
-                  ),
-                )
-              : Container();
-        },
-        currentIndex: _currentIndex,
-        onTap: (val) {
-          if (mounted && _currentIndex != val) {
-            setState(() {
-              _currentIndex = val;
-            });
-          }
-        },
-        body: IndexedStack(
-          index: _currentIndex,
-          children: <Widget>[
-            Dashboard(),
-            BasicSettingsScreen(),
-            InputSettingsScreen(),
-            OutputSettingsScreen(),
-            HardSubxSettingsScreen(),
-            ObscureSettingsScreen(),
-          ],
-        ),
-        tabs: <BottomNavigationBarItem>[
-          BottomNavigationBarItem(
-            label: 'Dashboard',
-            icon: Icon(Icons.dashboard),
-          ),
-          BottomNavigationBarItem(
-            label: 'Basic Settings',
-            icon: Icon(Icons.settings),
-          ),
-          BottomNavigationBarItem(
-            label: 'Input Settings',
-            icon: Icon(Icons.input),
           ),
-          BottomNavigationBarItem(
-            label: 'Output Settings',
-            icon: Icon(Icons.dvr_outlined),
-          ),
-          BottomNavigationBarItem(
-            label: 'HardSubx Settings',
-            icon: Icon(Icons.search),
-          ),
-          BottomNavigationBarItem(
-            label: 'Obscure Settings',
-            icon: Icon(Icons.do_disturb_alt_rounded),
+          Expanded(
+            child: IndexedStack(
+              index: _currentIndex,
+              children: <Widget>[
+                Dashboard(),
+                BasicSettingsScreen(),
+                InputSettingsScreen(),
+                OutputSettingsScreen(),
+                HardSubxSettingsScreen(),
+                ObscureSettingsScreen(),
+              ],
+            ),
           ),
         ],
       ),
     );
   }
 }
+
+class _CheckForUpdatesButton extends StatelessWidget {
+  const _CheckForUpdatesButton({
+    Key? key,
+  }) : super(key: key);
+
+  @override
+  Widget build(BuildContext context) {
+    if (!Platform.isWindows) return Container();
+
+    return BlocBuilder<ProcessBloc, ProcessState>(
+      builder: (context, state) {
+        return InkWell(
+          borderRadius: BorderRadius.circular(25),
+          hoverColor: Colors.transparent,
+          onTap: () {
+            context.read<UpdaterBloc>().add(CheckForUpdates(state.version!));
+          },
+          child: Container(
+            margin: const EdgeInsets.all(10),
+            padding: const EdgeInsets.all(12),
+            decoration: BoxDecoration(
+              borderRadius: BorderRadius.circular(25),
+              color: kBgLightColor,
+            ),
+            child: Material(
+              type: MaterialType.transparency,
+              child: IntrinsicHeight(
+                child: Row(
+                  children: [
+                    Icon(
+                      Icons.update,
+                      color: Colors.white54,
+                    ),
+                    VerticalDivider(),
+                    Expanded(
+                      child: FittedBox(
+                        child: Text(
+                          'Check for updates',
+                          style: TextStyle(color: Colors.white, fontSize: 15),
+                          textAlign: TextAlign.center,
+                        ),
+                      ),
+                    ),
+                    VerticalDivider(),
+                    Text(
+                      'V${state.version!.trim()}',
+                      style: TextStyle(
+                        fontSize: 12,
+                        fontWeight: FontWeight.bold,
+                        color: Colors.white60,
+                      ),
+                    ),
+                  ],
+                ),
+              ),
+            ),
+          ),
+        );
+      },
+    );
+  }
+}
